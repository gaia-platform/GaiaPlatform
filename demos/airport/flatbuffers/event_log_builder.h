#ifndef EVENT_LOG_BUILDER_H
#define EVENT_LOG_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef EVENT_LOG_READER_H
#include "event_log_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

static const flatbuffers_voffset_t __gaia_rules_event_log_required[] = { 0 };
typedef flatbuffers_ref_t gaia_rules_event_log_ref_t;
static gaia_rules_event_log_ref_t gaia_rules_event_log_clone(flatbuffers_builder_t *B, gaia_rules_event_log_table_t t);
__flatbuffers_build_table(flatbuffers_, gaia_rules_event_log, 8)

#define __gaia_rules_event_log_formal_args ,\
  int64_t v0, uint64_t v1, uint32_t v2, uint8_t v3,\
  flatbuffers_string_ref_t v4, uint64_t v5, uint64_t v6, flatbuffers_bool_t v7
#define __gaia_rules_event_log_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline gaia_rules_event_log_ref_t gaia_rules_event_log_create(flatbuffers_builder_t *B __gaia_rules_event_log_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, gaia_rules_event_log, gaia_rules_event_log_file_identifier, gaia_rules_event_log_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, gaia_rules_event_log_gaia_id, flatbuffers_int64, int64_t, 8, 8, INT64_C(0), gaia_rules_event_log)
__flatbuffers_build_scalar_field(1, flatbuffers_, gaia_rules_event_log_gaia_type, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), gaia_rules_event_log)
__flatbuffers_build_scalar_field(2, flatbuffers_, gaia_rules_event_log_event_type, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), gaia_rules_event_log)
__flatbuffers_build_scalar_field(3, flatbuffers_, gaia_rules_event_log_event_mode, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), gaia_rules_event_log)
__flatbuffers_build_string_field(4, flatbuffers_, gaia_rules_event_log_event_source, gaia_rules_event_log)
__flatbuffers_build_scalar_field(5, flatbuffers_, gaia_rules_event_log_timestamp, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), gaia_rules_event_log)
__flatbuffers_build_scalar_field(6, flatbuffers_, gaia_rules_event_log_context_id, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), gaia_rules_event_log)
__flatbuffers_build_scalar_field(7, flatbuffers_, gaia_rules_event_log_rules_fired, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), gaia_rules_event_log)

static inline gaia_rules_event_log_ref_t gaia_rules_event_log_create(flatbuffers_builder_t *B __gaia_rules_event_log_formal_args)
{
    if (gaia_rules_event_log_start(B)
        || gaia_rules_event_log_gaia_id_add(B, v0)
        || gaia_rules_event_log_gaia_type_add(B, v1)
        || gaia_rules_event_log_timestamp_add(B, v5)
        || gaia_rules_event_log_context_id_add(B, v6)
        || gaia_rules_event_log_event_type_add(B, v2)
        || gaia_rules_event_log_event_source_add(B, v4)
        || gaia_rules_event_log_event_mode_add(B, v3)
        || gaia_rules_event_log_rules_fired_add(B, v7)) {
        return 0;
    }
    return gaia_rules_event_log_end(B);
}

static gaia_rules_event_log_ref_t gaia_rules_event_log_clone(flatbuffers_builder_t *B, gaia_rules_event_log_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (gaia_rules_event_log_start(B)
        || gaia_rules_event_log_gaia_id_pick(B, t)
        || gaia_rules_event_log_gaia_type_pick(B, t)
        || gaia_rules_event_log_timestamp_pick(B, t)
        || gaia_rules_event_log_context_id_pick(B, t)
        || gaia_rules_event_log_event_type_pick(B, t)
        || gaia_rules_event_log_event_source_pick(B, t)
        || gaia_rules_event_log_event_mode_pick(B, t)
        || gaia_rules_event_log_rules_fired_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, gaia_rules_event_log_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* EVENT_LOG_BUILDER_H */
