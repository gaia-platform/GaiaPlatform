#include <atomic>
#include <algorithm>
#include <string.h>
#include <memory>
#include "../inc/i_campus.hpp"

//using namespace std;

ruleset campus_ruleset
{
    {         
        if( 1 == person.is_threat )
        {
            auto cbc = i_Campus::get_callback_class();
            char buffer[256];
            sprintf(buffer, "'%s' is brandishing a weapon", @person.name);
            cbc->cb_alert("Deadly Threat", buffer, 2, "");

            campus.in_emergency = true;
        }
        
        if( 0 == person.is_threat )
        {
            auto cbc = i_Campus::get_callback_class();
            char buffer[256];
            sprintf(buffer, "'%s' is not threatening anyone", @person.name);
            cbc->cb_alert("All Clear", buffer, 0, "");
        }   
              
        if( campus.in_emergency )
        {
            auto cbc = i_Campus::get_callback_class();
            cbc->cb_alert("Campus Emergency", "---", 1, "");
        }   
    }
    {
        if( Registration.LastOperation == INSERT )
        {
            Enrolled += 1;
            Rooms.Capacity = 2;

            auto cbc = i_Campus::get_callback_class();
            char buffer[256];
            sprintf(buffer, "Event: %s, Regsitrant: %s, Enrolled: %hu, Capacity %hu", 
                @Events.Name, @person.name, @Enrolled, @Rooms.Capacity);
            cbc->cb_alert("Registration", buffer, 0, "");

            if(@Enrolled > @Rooms.Capacity)
            {
                sprintf(buffer, "Event: %s, Enrolled: %hu, Capacity %hu", 
                    @Events.Name, @Enrolled, @Rooms.Capacity);
                cbc->cb_alert("Event over room capacty", buffer, 0, "");                
            }
        } 

        /*if( Events.LastOperation == UPDATE )
        {
            auto cbc = i_Campus::get_callback_class();
            cbc->cb_alert("Enrolled", Events.Name, 0, "");
        }*/ 

        /*if( 0 == strcmp( Staff.StaffId, "aa" ) )
        {
            auto pid = @PersonId;
        }

        if( Parents.LastOperation == INSERT )
        {
            Enrollment += 1;
        }*/
    }
}
