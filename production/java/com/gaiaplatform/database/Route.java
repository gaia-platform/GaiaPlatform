// automatically generated by the FlatBuffers compiler, do not modify

package com.gaiaplatform.database;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Route extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static Route getRootAsRoute(ByteBuffer _bb) { return getRootAsRoute(_bb, new Route()); }
  public static Route getRootAsRoute(ByteBuffer _bb, Route obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Route __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long GaiaId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long GaiaAlId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long GaiaSrcId() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long GaiaDstId() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String airline() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer airlineAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer airlineInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public int alId() { int o = __offset(14); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String srcAp() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer srcApAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer srcApInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  public int srcApId() { int o = __offset(18); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String dstAp() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer dstApAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer dstApInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  public int dstApId() { int o = __offset(22); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String codeshare() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer codeshareAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer codeshareInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  public int stops() { int o = __offset(26); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String equipment() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer equipmentAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer equipmentInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }

  public static int createRoute(FlatBufferBuilder builder,
      long Gaia_id,
      long Gaia_Al_id,
      long Gaia_Src_id,
      long Gaia_Dst_id,
      int airlineOffset,
      int al_id,
      int src_apOffset,
      int src_ap_id,
      int dst_apOffset,
      int dst_ap_id,
      int codeshareOffset,
      int stops,
      int equipmentOffset) {
    builder.startTable(13);
    Route.addGaiaDstId(builder, Gaia_Dst_id);
    Route.addGaiaSrcId(builder, Gaia_Src_id);
    Route.addGaiaAlId(builder, Gaia_Al_id);
    Route.addGaiaId(builder, Gaia_id);
    Route.addEquipment(builder, equipmentOffset);
    Route.addStops(builder, stops);
    Route.addCodeshare(builder, codeshareOffset);
    Route.addDstApId(builder, dst_ap_id);
    Route.addDstAp(builder, dst_apOffset);
    Route.addSrcApId(builder, src_ap_id);
    Route.addSrcAp(builder, src_apOffset);
    Route.addAlId(builder, al_id);
    Route.addAirline(builder, airlineOffset);
    return Route.endRoute(builder);
  }

  public static void startRoute(FlatBufferBuilder builder) { builder.startTable(13); }
  public static void addGaiaId(FlatBufferBuilder builder, long GaiaId) { builder.addLong(0, GaiaId, 0L); }
  public static void addGaiaAlId(FlatBufferBuilder builder, long GaiaAlId) { builder.addLong(1, GaiaAlId, 0L); }
  public static void addGaiaSrcId(FlatBufferBuilder builder, long GaiaSrcId) { builder.addLong(2, GaiaSrcId, 0L); }
  public static void addGaiaDstId(FlatBufferBuilder builder, long GaiaDstId) { builder.addLong(3, GaiaDstId, 0L); }
  public static void addAirline(FlatBufferBuilder builder, int airlineOffset) { builder.addOffset(4, airlineOffset, 0); }
  public static void addAlId(FlatBufferBuilder builder, int alId) { builder.addInt(5, alId, 0); }
  public static void addSrcAp(FlatBufferBuilder builder, int srcApOffset) { builder.addOffset(6, srcApOffset, 0); }
  public static void addSrcApId(FlatBufferBuilder builder, int srcApId) { builder.addInt(7, srcApId, 0); }
  public static void addDstAp(FlatBufferBuilder builder, int dstApOffset) { builder.addOffset(8, dstApOffset, 0); }
  public static void addDstApId(FlatBufferBuilder builder, int dstApId) { builder.addInt(9, dstApId, 0); }
  public static void addCodeshare(FlatBufferBuilder builder, int codeshareOffset) { builder.addOffset(10, codeshareOffset, 0); }
  public static void addStops(FlatBufferBuilder builder, int stops) { builder.addInt(11, stops, 0); }
  public static void addEquipment(FlatBufferBuilder builder, int equipmentOffset) { builder.addOffset(12, equipmentOffset, 0); }
  public static int endRoute(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Route get(int j) { return get(new Route(), j); }
    public Route get(Route obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}
