// automatically generated by the FlatBuffers compiler, do not modify

package com.gaiaplatform.database;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Airport extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static Airport getRootAsAirport(ByteBuffer _bb) { return getRootAsAirport(_bb, new Airport()); }
  public static Airport getRootAsAirport(ByteBuffer _bb, Airport obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Airport __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long GaiaId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public int apId() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String name() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String city() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer cityAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer cityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public String country() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer countryAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer countryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public String iata() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer iataAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer iataInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  public String icao() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer icaoAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer icaoInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  public double latitude() { int o = __offset(18); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double longitude() { int o = __offset(20); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public int altitude() { int o = __offset(22); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public float timezone() { int o = __offset(24); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public String dst() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer dstAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer dstInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  public String tztext() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer tztextAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer tztextInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  public String type() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  public String source() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }

  public static int createAirport(FlatBufferBuilder builder,
      long Gaia_id,
      int ap_id,
      int nameOffset,
      int cityOffset,
      int countryOffset,
      int iataOffset,
      int icaoOffset,
      double latitude,
      double longitude,
      int altitude,
      float timezone,
      int dstOffset,
      int tztextOffset,
      int typeOffset,
      int sourceOffset) {
    builder.startTable(15);
    Airport.addLongitude(builder, longitude);
    Airport.addLatitude(builder, latitude);
    Airport.addGaiaId(builder, Gaia_id);
    Airport.addSource(builder, sourceOffset);
    Airport.addType(builder, typeOffset);
    Airport.addTztext(builder, tztextOffset);
    Airport.addDst(builder, dstOffset);
    Airport.addTimezone(builder, timezone);
    Airport.addAltitude(builder, altitude);
    Airport.addIcao(builder, icaoOffset);
    Airport.addIata(builder, iataOffset);
    Airport.addCountry(builder, countryOffset);
    Airport.addCity(builder, cityOffset);
    Airport.addName(builder, nameOffset);
    Airport.addApId(builder, ap_id);
    return Airport.endAirport(builder);
  }

  public static void startAirport(FlatBufferBuilder builder) { builder.startTable(15); }
  public static void addGaiaId(FlatBufferBuilder builder, long GaiaId) { builder.addLong(0, GaiaId, 0L); }
  public static void addApId(FlatBufferBuilder builder, int apId) { builder.addInt(1, apId, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(2, nameOffset, 0); }
  public static void addCity(FlatBufferBuilder builder, int cityOffset) { builder.addOffset(3, cityOffset, 0); }
  public static void addCountry(FlatBufferBuilder builder, int countryOffset) { builder.addOffset(4, countryOffset, 0); }
  public static void addIata(FlatBufferBuilder builder, int iataOffset) { builder.addOffset(5, iataOffset, 0); }
  public static void addIcao(FlatBufferBuilder builder, int icaoOffset) { builder.addOffset(6, icaoOffset, 0); }
  public static void addLatitude(FlatBufferBuilder builder, double latitude) { builder.addDouble(7, latitude, 0.0); }
  public static void addLongitude(FlatBufferBuilder builder, double longitude) { builder.addDouble(8, longitude, 0.0); }
  public static void addAltitude(FlatBufferBuilder builder, int altitude) { builder.addInt(9, altitude, 0); }
  public static void addTimezone(FlatBufferBuilder builder, float timezone) { builder.addFloat(10, timezone, 0.0f); }
  public static void addDst(FlatBufferBuilder builder, int dstOffset) { builder.addOffset(11, dstOffset, 0); }
  public static void addTztext(FlatBufferBuilder builder, int tztextOffset) { builder.addOffset(12, tztextOffset, 0); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(13, typeOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(14, sourceOffset, 0); }
  public static int endAirport(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Airport get(int j) { return get(new Airport(), j); }
    public Airport get(Airport obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

