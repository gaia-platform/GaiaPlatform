// RUN: %gaiat %s --

#include "tags_test.h"
// #define DO_NOT_TEST_YET 
// #define DO_NOT_TEST_829

ruleset test1
{
    OnInsert(I:incubator)
    {
        use_float(I.min_temp);
    }
}

ruleset test2
{
    OnInsert(I:incubator)
    {
        I.min_temp += sensor.value;
        actuator.value = I.max_temp;
    }
}

ruleset test3
{
    OnInsert(I:incubator)
    {
        min_temp += sensor.value;
    }
}

#ifdef DO_NOT_TEST_YET
// GAIAPLAT-855
ruleset test4 : Table(actuator, incubator)
{
    OnInsert(I:incubator)
    {
        I.min_temp += value;
    }
    OnInsert(A:actuator)
    {
        A.value += incubator.max_temp;
        value += min_temp;
    }
}
#endif

ruleset test5
{
    // One table.
    OnChange(A:actuator)
    {
        use_float(A.value);
    }
}

#ifdef DO_NOT_TEST_YET
// GAIAPLAT-855
ruleset test6 : Table(actuator)
{
    // One field.
    OnChange(A:actuator.value)
    {
        use_float(A.value);
    }
}
#endif

ruleset test7
{
    // One table.
    OnUpdate(A:actuator)
    {
        use_float(A.value);
        float v = A.value;
    }
}

ruleset test8
{
    // One field.
    OnUpdate(A:actuator.value)
    {
        use_float(A.value);
    }
}

ruleset test9
{
    // Table & fields.
    OnUpdate(S:sensor, V:sensor.value, sensor.name, sensor.timestamp)
    {
        float v = S.value + V.value;
        sensor.name = "perimeter";
    }
}

#ifdef DO_NOT_TEST_YET
// GAIAPLAT-855
ruleset test10 : Table(sensor)
{
    OnUpdate(S:sensor)
    {
        use_string(name);
    }
}
#endif

ruleset test11
{
    OnUpdate(S:sensor, T:sensor)
    {
        use_string(S.name);
        use_string(T.name);
    }
}

ruleset test12
{
    OnUpdate(incubator)
    {
        farmer->Y:yield.bushels = 0;

        int unsigned i = 0;
        if (i == 0)
        {
            Y:yield.bushels += 1;
        }
    }
}

ruleset test13
{
    OnInsert(incubator)
    {
        // lable:tag:table works for both label and tag.
        LABEL:I:incubator->sensor.value = I.max_temp - 1.0;
        if (actuator.value > 3.0)
        {
            goto LABEL;
        }
    }
}

ruleset test14
{
    OnInsert(incubator)
    {
        // Ensure the label is a goto target using empty statement.
        LABEL:; sensor.value = max_temp - 1.0;
        if (actuator.value > 3.0)
        {
            goto LABEL;
        }
    }
}

#ifdef DO_NOT_TEST_829
// GAIAPLAT-829
ruleset testE1
{
    OnUpdate(incubator)
    {
        int unsigned i = 0;
        if (i == 0)
        {
            F:farmer.acreage += 1;
        }
        else
        {
            F:farmer.acreage -= 1;
        }
    }
}
#endif

#ifdef DO_NOT_TEST_829
// GAIAPLAT-829
ruleset testE2
{
    OnUpdate(incubator)
    {
        int unsigned i = 0;
        if (i == 0)
        {
            F:farmer.acreage += 1;
        }
        F:farmer.acreage -= 1;
    }
}
#endif

#ifdef DO_NOT_TEST_829
// GAIAPLAT-829
ruleset testE3
{
    OnUpdate(incubator)
    {
        int unsigned i = 0;
        if (i == 0)
        {}
        else
        {
            F:farmer.acreage += 1;
        }
        F:farmer.acreage -= 1;
    }
}
#endif
