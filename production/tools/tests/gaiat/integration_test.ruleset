// RUN: %gaiat %s --

ruleset test
{
}

ruleset test1
{
    {
        min_temp+=1;
    }
}

ruleset test2
{
    {
        max_temp++;
    }
}

ruleset test3
{
    {
      animal.age++;
    }
}

ruleset test4
{
    {
        if (sensor.LastOperation == INSERT)
        {
            sensor.delete_row();
        }
    }
}

typedef enum
{
    undefined = 0,
    actuators = 1,
    sensors = 2,
    incubators = 3
} hardware_type;

ruleset test5
{
    {
	    if (actuator.value < 5)
	    {
		    actuator.value = 5;
	    }
    }
}

typedef enum
{
    values = 0,
    types = 1,
    defs = 2
} testEnum;

ruleset test6 : Table (sensor)
{
  {
	  if (value < 5)
	  {
		  value = 5;
	  }
  }
}

class test
{
public:
     void delete_row()
     {

     }
};

void testFunction()
{
    int value = 5;
}

ruleset test7
{
  OnChange(sensor)
  {
      auto t = sensor.gaia_id();
	  if (sensor.LastOperation == DELETE)
      {
          test t;
          t.delete_row();
      }
  }
}

ruleset test8
{
    {
        auto rule_name = rule_context.rule_name;
        auto ruleset_name = rule_context.ruleset_name;
        auto event_type = rule_context.event_type;
        auto gaia_type = rule_context.gaia_type;

	    if (actuator.value < 5 && sensor.value > 10)
	    {
		    actuator.value = 5;
	    }
    }
}

void OnUpdate()
{}

ruleset test9
{
  OnUpdate(sensor)
  {
      OnUpdate();
  }
}
