#include "gaia_barn_storage.h"

int g_rule_called = 0;
int g_insert_called = 0;
int g_update_called = 0;
int g_actuator_rule_called = 0;

using namespace gaia::barn_storage;

int g_text_mixed_called = 0;

void f(gaia::barn_storage::incubator_t i)
{
    i.sensors().insert(sensor_t::insert_row("TestSensor1", 0, 0.0));
    i.actuators().insert(actuator_t::insert_row("TestActuator1", 0, 0.0));
}

void f1(const gaia::barn_storage::incubator_t& i)
{
    i.sensors().insert(sensor_t::insert_row("TestSensor2", 0, 0.0));
    i.actuators().insert(actuator_t::insert_row("TestActuator2", 0, 0.0));
}

void f2(gaia::barn_storage::incubator_t& i)
{
    i.sensors().insert(sensor_t::insert_row("TestSensor3", 0, 0.0));
    i.actuators().insert(actuator_t::insert_row("TestActuator3", 0, 0.0));
}

ruleset test_mixed : Table(incubator)
{
    OnInsert(i:incubator)
    {
        f(incubator);
        f1(incubator);
        f2(incubator);
        f(i);
        f1(i);
        f2(i);
        g_text_mixed_called++;
    }
}
