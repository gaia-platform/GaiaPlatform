/////////////////////////////////////////////
// Copyright (c) Gaia Platform LLC
// All rights reserved.
/////////////////////////////////////////////

#include "gtest/gtest.h"

#include "gaia_internal/catalog/catalog.hpp"
#include "gaia_internal/common/file.hpp"
#include "gaia_internal/db/db_catalog_test_base.hpp"

using namespace std;

using namespace gaia::db;
using namespace gaia::catalog;
using namespace gaia::catalog::ddl;

class fdw_test : public db_catalog_test_base_t
{
protected:
    fdw_test()
        : db_catalog_test_base_t(){};
};

void verify_command_output(string command_filename)
{
    // Load the command string generated by the build.
    gaia::common::file_loader_t command_loader;
    command_loader.load_file_data(command_filename, true);

    char* command = reinterpret_cast<char*>(command_loader.get_data());

    cerr
        << "Command executed by test is:" << endl
        << command << endl;

    // Execute the command and validate its return value.
    int return_value = system(command);
    ASSERT_EQ(0, return_value);
}

TEST_F(fdw_test, array)
{
    load_schema("array_schema.ddl");
    verify_command_output("fdw_test_array_command.txt");
}

TEST_F(fdw_test, airport)
{
    load_schema("airport_schema.ddl");
    verify_command_output("fdw_test_airport_command.txt");
}
