#!/bin/bash

# TODO: check for clang-format version.

# Allows us to read user input below, assigns stdin to keyboard
exec </dev/tty

# check if clang-format is installed.
if ! command -v clang-format-13 &>/dev/null; then
    echo "Please install clang-format 13.0"
    exit 1
fi

#### 1. check for forbidden patterns in header files ####

# Forbidden header strings
forbidden_patterns=(
    "#include <iostream>"
    "using namespace"
)

for file in $(git --no-pager diff --cached --name-only | grep -E "^(production).*(\.hpp|\.inc)$"); do
    for forbidden_pattern in "${forbidden_patterns[@]}"; do
    if grep -Fq "$forbidden_pattern" "$file"; then
        echo "File '$file' contains forbidden pattern: '$forbidden_pattern'";
        exit 1;
    fi
    done
done

#### 2. apply formatting to all files ####

# Files excluded from clang-format (interpreted as regex against the full path of the file)
excluded_files=(
    "gaia_catalog\.h"
    "catalog_generated\.h"
    "gaia_catalog\.cpp"
)

# Runs clang-format only on files that:
# 1. Are in the index (git add)
# 2. Are in the production/ directory
# 3. End with .hpp/.cpp/etc..
for file in $(git --no-pager diff --cached --name-only | grep -E "^(production|demo).*(\.hpp|\.cpp|\.inc)$|^\.clang-format$"); do
    format_file=true

    # Check if the file exists (renamed files they may not exists)
    if [ ! -f "$file" ]; then
        continue
    fi

    # If the content of the file is the same as master, do not run the formatter.
    # The file is likely to be the result of a merge.
    if [[ -z "$(git --no-pager diff origin/master -- $file)" ]]; then
        echo "Skip formatting file, likely coming from merge: $file"
        continue
    fi

    for exclude_pattern in "${excluded_files[@]}"; do
        if echo "$file" | grep -qE "$exclude_pattern"; then
            format_file=false
            break
        fi
    done

    # If .clang-format has been changed, formats clang_format.cpp/hpp to show the outcome.
    if echo "$file" | grep -qE "(\.clang-format)$"; then
        clang-format-13 -i "production/tools/gaia_style/tests/clang_format.cpp"
        git add "production/tools/gaia_style/tests/clang_format.cpp"
        clang-format-13 -i "production/tools/gaia_style/tests/clang_format.hpp"
        git add "production/tools/gaia_style/tests/clang_format.hpp"
        format_file=false
    fi

    if [ "$format_file" = "true" ]; then
        echo "Formatting file: $file"
        clang-format-13 -i "$file"
        git add "$file"
    fi
done
