/**
 * Gaia School
 * School management system REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * FacilityApiImpl.h
 *
 *
 */

#ifndef FACILITY_API_IMPL_H_
#define FACILITY_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <FacilityApi.h>

#include <pistache/optional.h>

#include "Building.h"
#include "Facescan.h"
#include "Room.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class FacilityApiImpl : public org::openapitools::server::api::FacilityApi {
public:
  FacilityApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~FacilityApiImpl() {}

  void add_building(const Building &building,
                    Pistache::Http::ResponseWriter &response);
  void add_facescan(const Facescan &facescan,
                    Pistache::Http::ResponseWriter &response);
  void add_room(const Room &room, Pistache::Http::ResponseWriter &response);
  void delete_building(const int64_t &buildingId,
                       Pistache::Http::ResponseWriter &response);
  void delete_room(const int64_t &roomId,
                   Pistache::Http::ResponseWriter &response);
  void get_building_by_id(const int64_t &buildingId,
                          Pistache::Http::ResponseWriter &response);
  void get_room_by_id(const int64_t &roomId,
                      Pistache::Http::ResponseWriter &response);
  void list_buildings(Pistache::Http::ResponseWriter &response);
  void list_facescan_at_building(const int64_t &buildingId,
                                 Pistache::Http::ResponseWriter &response);
  void list_rooms(Pistache::Http::ResponseWriter &response);
  void update_building(const Building &building,
                       Pistache::Http::ResponseWriter &response);
  void update_room(const Room &room, Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif