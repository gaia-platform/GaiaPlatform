/**
 * Gaia School
 * School management system REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * EventApiImpl.h
 *
 *
 */

#ifndef EVENT_API_IMPL_H_
#define EVENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <EventApi.h>

#include <pistache/optional.h>

#include "Event.h"
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class EventApiImpl : public org::openapitools::server::api::EventApi {
public:
  EventApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~EventApiImpl() {}

  void add_event(const Event &event, Pistache::Http::ResponseWriter &response);
  void add_event_participant(const int64_t &eventId,
                             const std::vector<int64_t> &requestBody,
                             Pistache::Http::ResponseWriter &response);
  void delete_event(const int64_t &eventId,
                    Pistache::Http::ResponseWriter &response);
  void drop_event_participant(const int64_t &eventId, const int64_t &studentId,
                              Pistache::Http::ResponseWriter &response);
  void get_event_by_id(const int64_t &eventId,
                       Pistache::Http::ResponseWriter &response);
  void list_event_participant(const int64_t &eventId,
                              Pistache::Http::ResponseWriter &response);
  void list_events(Pistache::Http::ResponseWriter &response);
  void update_event(const Event &event,
                    Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif