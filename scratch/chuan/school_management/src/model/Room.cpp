/**
 * Gaia School
 * School management system REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "Room.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Room::Room() {
  m_Id = 0L;
  m_IdIsSet = false;
  m_Name = "";
  m_NameIsSet = false;
  m_number = "";
  m_numberIsSet = false;
  m_Floor = "";
  m_FloorIsSet = false;
  m_Capacity = 0;
  m_CapacityIsSet = false;
  m_BuildingId = 0L;
  m_BuildingIdIsSet = false;
}

Room::~Room() {}

void Room::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const Room &o) {
  j = nlohmann::json();
  if (o.idIsSet())
    j["id"] = o.m_Id;
  if (o.nameIsSet())
    j["name"] = o.m_Name;
  if (o.numberIsSet())
    j["number"] = o.m_number;
  if (o.floorIsSet())
    j["floor"] = o.m_Floor;
  if (o.capacityIsSet())
    j["capacity"] = o.m_Capacity;
  if (o.buildingIdIsSet())
    j["buildingId"] = o.m_BuildingId;
}

void from_json(const nlohmann::json &j, Room &o) {
  if (j.find("id") != j.end()) {
    j.at("id").get_to(o.m_Id);
    o.m_IdIsSet = true;
  }
  if (j.find("name") != j.end()) {
    j.at("name").get_to(o.m_Name);
    o.m_NameIsSet = true;
  }
  if (j.find("number") != j.end()) {
    j.at("number").get_to(o.m_number);
    o.m_numberIsSet = true;
  }
  if (j.find("floor") != j.end()) {
    j.at("floor").get_to(o.m_Floor);
    o.m_FloorIsSet = true;
  }
  if (j.find("capacity") != j.end()) {
    j.at("capacity").get_to(o.m_Capacity);
    o.m_CapacityIsSet = true;
  }
  if (j.find("buildingId") != j.end()) {
    j.at("buildingId").get_to(o.m_BuildingId);
    o.m_BuildingIdIsSet = true;
  }
}

int64_t Room::getId() const { return m_Id; }
void Room::setId(int64_t const value) {
  m_Id = value;
  m_IdIsSet = true;
}
bool Room::idIsSet() const { return m_IdIsSet; }
void Room::unsetId() { m_IdIsSet = false; }
std::string Room::getName() const { return m_Name; }
void Room::setName(std::string const &value) {
  m_Name = value;
  m_NameIsSet = true;
}
bool Room::nameIsSet() const { return m_NameIsSet; }
void Room::unsetName() { m_NameIsSet = false; }
std::string Room::getNumber() const { return m_number; }
void Room::setNumber(std::string const &value) {
  m_number = value;
  m_numberIsSet = true;
}
bool Room::numberIsSet() const { return m_numberIsSet; }
void Room::unsetnumber() { m_numberIsSet = false; }
std::string Room::getFloor() const { return m_Floor; }
void Room::setFloor(std::string const &value) {
  m_Floor = value;
  m_FloorIsSet = true;
}
bool Room::floorIsSet() const { return m_FloorIsSet; }
void Room::unsetFloor() { m_FloorIsSet = false; }
int32_t Room::getCapacity() const { return m_Capacity; }
void Room::setCapacity(int32_t const value) {
  m_Capacity = value;
  m_CapacityIsSet = true;
}
bool Room::capacityIsSet() const { return m_CapacityIsSet; }
void Room::unsetCapacity() { m_CapacityIsSet = false; }
int64_t Room::getBuildingId() const { return m_BuildingId; }
void Room::setBuildingId(int64_t const value) {
  m_BuildingId = value;
  m_BuildingIdIsSet = true;
}
bool Room::buildingIdIsSet() const { return m_BuildingIdIsSet; }
void Room::unsetBuildingId() { m_BuildingIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
