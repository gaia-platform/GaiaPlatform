/**
 * Gaia School
 * School management system REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "Event.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Event::Event() {
  m_Id = 0L;
  m_IdIsSet = false;
  m_Name = "";
  m_NameIsSet = false;
  m_StartTime = 0;
  m_StartTimeIsSet = false;
  m_EndTime = 0;
  m_EndTimeIsSet = false;
  m_RoomId = 0L;
  m_RoomIdIsSet = false;
  m_StaffId = 0L;
  m_StaffIdIsSet = false;
}

Event::~Event() {}

void Event::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const Event &o) {
  j = nlohmann::json();
  if (o.idIsSet())
    j["id"] = o.m_Id;
  if (o.nameIsSet())
    j["name"] = o.m_Name;
  if (o.startTimeIsSet())
    j["startTime"] = o.m_StartTime;
  if (o.endTimeIsSet())
    j["endTime"] = o.m_EndTime;
  if (o.roomIdIsSet())
    j["roomId"] = o.m_RoomId;
  if (o.staffIdIsSet())
    j["staffId"] = o.m_StaffId;
}

void from_json(const nlohmann::json &j, Event &o) {
  if (j.find("id") != j.end()) {
    j.at("id").get_to(o.m_Id);
    o.m_IdIsSet = true;
  }
  if (j.find("name") != j.end()) {
    j.at("name").get_to(o.m_Name);
    o.m_NameIsSet = true;
  }
  if (j.find("startTime") != j.end()) {
    j.at("startTime").get_to(o.m_StartTime);
    o.m_StartTimeIsSet = true;
  }
  if (j.find("endTime") != j.end()) {
    j.at("endTime").get_to(o.m_EndTime);
    o.m_EndTimeIsSet = true;
  }
  if (j.find("roomId") != j.end()) {
    j.at("roomId").get_to(o.m_RoomId);
    o.m_RoomIdIsSet = true;
  }
  if (j.find("staffId") != j.end()) {
    j.at("staffId").get_to(o.m_StaffId);
    o.m_StaffIdIsSet = true;
  }
}

int64_t Event::getId() const { return m_Id; }
void Event::setId(int64_t const value) {
  m_Id = value;
  m_IdIsSet = true;
}
bool Event::idIsSet() const { return m_IdIsSet; }
void Event::unsetId() { m_IdIsSet = false; }
std::string Event::getName() const { return m_Name; }
void Event::setName(std::string const &value) {
  m_Name = value;
  m_NameIsSet = true;
}
bool Event::nameIsSet() const { return m_NameIsSet; }
void Event::unsetName() { m_NameIsSet = false; }
int32_t Event::getStartTime() const { return m_StartTime; }
void Event::setStartTime(int32_t const value) {
  m_StartTime = value;
  m_StartTimeIsSet = true;
}
bool Event::startTimeIsSet() const { return m_StartTimeIsSet; }
void Event::unsetStartTime() { m_StartTimeIsSet = false; }
int32_t Event::getEndTime() const { return m_EndTime; }
void Event::setEndTime(int32_t const value) {
  m_EndTime = value;
  m_EndTimeIsSet = true;
}
bool Event::endTimeIsSet() const { return m_EndTimeIsSet; }
void Event::unsetEndTime() { m_EndTimeIsSet = false; }
int64_t Event::getRoomId() const { return m_RoomId; }
void Event::setRoomId(int64_t const value) {
  m_RoomId = value;
  m_RoomIdIsSet = true;
}
bool Event::roomIdIsSet() const { return m_RoomIdIsSet; }
void Event::unsetRoomId() { m_RoomIdIsSet = false; }
int64_t Event::getStaffId() const { return m_StaffId; }
void Event::setStaffId(int64_t const value) {
  m_StaffId = value;
  m_StaffIdIsSet = true;
}
bool Event::staffIdIsSet() const { return m_StaffIdIsSet; }
void Event::unsetStaffId() { m_StaffIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
