openapi: 3.0.0
servers:
  - url: 'http://localhost:8080/v2'
info:
  description: >-
    School management system REST API
  version: 1.0.0
  title: Gaia School
tags:
  - name: personnel
    description: Personnel management
  - name: facility
    description: Facility management
  - name: event
    description: Event management
paths:
  /people:
    get:
      tags:
        - personnel
      summary: List all persons
      description: ''
      operationId: listPeople
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /people/findByRole:
    get:
      tags:
        - personnel
      summary: Find people by role
      description: ''
      operationId: findPeopleByRole
      parameters:
        - name: role
          in: query
          required: true
          style: form
          explode: false
          schema:
            type: string
            enum:
              - staff
              - student
              - parent
              - stranger
            default: student
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '400':
          description: Invalid input
  /person:
    post:
      tags:
        - personnel
      summary: Register a new person
      description: ''
      operationId: addPerson
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Person'
    put:
      tags:
        - personnel
      summary: Update an existing person
      description: ''
      operationId: updatePerson
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Person'
  '/student/{studentId}':
    get:
      tags:
        - personnel
      summary: Find a student by ID
      description: Returns a single student
      operationId: getStudentById
      parameters:
        - name: studentId
          in: path
          description: ID of student to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid input
    delete:
      tags:
        - personnel
      summary: Remove a student and its parents
      description: ''
      operationId: deleteStudent
      parameters:
        - name: studentId
          in: path
          description: Id of the student to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid input
  /room:
    post:
      tags:
        - facility
      summary: Add a new room
      description: ''
      operationId: addRoom
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Room'
    put:
      tags:
        - facility
      summary: Update an existing room
      description: ''
      operationId: updateRoom
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Room'
  '/room/{roomId}':
    get:
      tags:
        - facility
      summary: Find a room by ID
      description: Returns a single room
      operationId: getRoomById
      parameters:
        - name: roomId
          in: path
          description: ID of room to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '400':
          description: Invalid input
    delete:
      tags:
        - facility
      summary: Remove a room
      description: ''
      operationId: deleteRoom
      parameters:
        - name: roomId
          in: path
          description: Id of the room to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid input
  /building:
    post:
      tags:
        - facility
      summary: Add a new building
      description: ''
      operationId: addBuilding
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Building'
    put:
      tags:
        - facility
      summary: Update an existing building
      description: ''
      operationId: updateBuilding
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Building'
  '/building/{buildingId}':
    get:
      tags:
        - facility
      summary: Find a building by ID
      description: ''
      operationId: getBuildingById
      parameters:
        - name: buildingId
          in: path
          description: ID of building to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
        '400':
          description: Invalid input
    delete:
      tags:
        - facility
      summary: Remove a building
      description: ''
      operationId: deleteBuilding
      parameters:
        - name: buildingId
          in: path
          description: Id of the building to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid input
  '/building/{buildingId}/facescan':
    get:
      tags:
        - facility
      summary: List all face scanned at a building
      description: ''
      operationId: listFacescanAtBuilding
      parameters:
        - name: buildingId
          in: path
          description: ID of building to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                description: List of facescans
                items:
                  $ref: '#/components/schemas/Facescan'
        '400':
          description: Invalid input
  '/facescan':
    post:
      tags:
        - facility
      summary: Add a new facescan
      description: ''
      operationId: addFacescan
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Facescan'
  /buildings:
    get:
      tags:
        - facility
      summary: List all buildings
      description: ''
      operationId: listBuildings
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Building'
  /rooms:
    get:
      tags:
        - facility
      summary: List all rooms
      description: ''
      operationId: listRooms
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
  /event:
    post:
      tags:
        - event
      summary: Add a new event
      description: ''
      operationId: addEvent
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Event'
    put:
      tags:
        - event
      summary: Update an existing event
      description: ''
      operationId: updateEvent
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Event'
  '/event/{eventId}':
    get:
      tags:
        - event
      summary: Find an event by ID
      description: ''
      operationId: getEventById
      parameters:
        - name: eventId
          in: path
          description: ID of event to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid input
    delete:
      tags:
        - event
      summary: Remove an event
      description: ''
      operationId: deleteEvent
      parameters:
        - name: eventId
          in: path
          description: Id of the event to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid input
  '/event/{eventId}/participant':
    get:
      tags:
        - event
      summary: Find participants of an event
      description: ''
      operationId: listEventParticipant
      parameters:
        - name: eventId
          in: path
          description: ID of event
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                description: List of IDs of the student registered for the event
                items:
                  type: integer
                  format: int64
        '400':
          description: Invalid input
    post:
      tags:
        - event
      summary: Sign-up for an event
      description: ''
      operationId: addEventParticipant
      parameters:
      - name: eventId
        in: path
        description: ID of the event to signup
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: List of IDs of the students who want to participate in the event
              items:
                type: integer
                format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
  '/event/{eventId}/participant/{studentId}':
      delete:
        tags:
          - event
        summary: Delete a participant from an event
        description: ''
        operationId: dropEventParticipant
        parameters:
        - name: eventId
          in: path
          description: ID of the event
          required: true
          schema:
            type: integer
            format: int64
        - name: studentId
          in: path
          description: ID of the student
          required: true
          schema:
            type: integer
            format: int64
        responses:
          '400':
            description: Invalid input
  /events:
    get:
      tags:
        - event
      summary: List all events
      description: ''
      operationId: listEvents
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
components:
  requestBodies:
    Person:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Person'
      description: Person that needs to be added to the school
      required: true
    Room:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Room'
      description: Room that needs to be added to the school
      required: true
    Building:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Building'
      description: Building that needs to be added to the school
      required: true
    Event:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Event'
      description: Event that needs to be added to the school
      required: true
    Facescan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Facescan'
      description: Facescan that needs to be added to the school
      required: true
  schemas:
    Person:
      title: Person
      description: A person record in the school system
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        birthdate:
          type: integer
          format: int32
        faceSignature:
          type: integer
          format: int64
        role:
          type: string
          enum:
            - staff
            - parent
            - student
        studentId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        staffId:
          type: integer
          format: int64
        relationshipToStudent:
          type: string
          enum:
            - father
            - mohter
        hiredDate:
          type: integer
          format: int32
    Student:
      title: Student
      description: Everything about a student
      properties:
        identity:
          $ref: '#/components/schemas/Person'
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Building:
      title: Building
      description: A building of the school
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        open:
          type: boolean
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    Room:
      title: Room
      description: A room in a school building
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        number:
          type: string
        floor:
          type: string
        capacity:
          type: integer
          format: int32
        buildingId:
          type: integer
          format: int64
    Event:
      title: Event
      description: A school event
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        startTime:
          type: integer
          format: int32
        endTime:
          type: integer
          format: int32
        roomId:
          type: integer
          format: int64
        staffId:
          type: integer
          format: int64
    Facescan:
      title: Facescan
      description: A facescan
      type: object
      properties:
        id:
          type: integer
          format: int64
        signature:
          type: integer
          format: int64
        time:
          type: integer
          format: int32
        buildingId:
          type: integer
          format: int64
