name: Main

on:
  push:
    branches: [master]
    pull_request:

jobs:
  scenario-tests:
    strategy:
      matrix:
        python: [3.8]
        platform: [ubuntu-20.04]
    runs-on: ${{ matrix.platform }}
    env:
      GAIA_REPO: /home/runner/work/GaiaPlatform/GaiaPlatform
    steps:
      # - name: Say Hello
      #   run: echo Hello World!
      # - name: Say Goodbye
      #   run: |
      #     echo Job Finished.
      #     echo Goodbye!
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install PipEnv
        uses: dschep/install-pipenv-action@v1
        with:
          version: 2021.5.29
      - name: Install Required Applications
        run: |
          sudo apt-get update && sudo apt-get install -y clang-format-10 clang-tidy-10 debhelper flatbuffers-compiler libcap-dev openjdk-8-jdk python3-dev rpm libelf-dev libdwarf-dev zlib1g-dev flex m4 apt-transport-https ca-certificates gnupg lsb-release software-properties-common wget clang-10 libc++-10-dev libc++abi-10-dev lld-10 build-essential libacl1-dev libcap-dev lsof groff libtool-bin quilt ca-certificates curl gnupg libpq-dev locales lsb-release python3-pip ssl-cert python3 python3-dev python3-pip build-essential
      - name: Install Required Python Packages
        run: |
          python3.8 -m pip install --user atools argcomplete pytest
      - name: Install Required Third Party Git Respitories
        run: |
          cd $GAIA_REPO/third_party/production/backward
          git clone --depth 1 --branch v1.5 https://github.com/bombela/backward-cpp.git
          rm -rf */.git
          cd $GAIA_REPO/third_party/production/daemonize
          git clone --depth 1 --branch release-1.7.8 https://github.com/bmc/daemonize.git
          rm -rf */.git
          cd $GAIA_REPO/third_party/production/libexplain
          git clone --depth 1 --branch "debian/1.4.D001-10" https://salsa.debian.org/debian/libexplain
          rm -rf */.git
          cd $GAIA_REPO/third_party/production/pybind11
          git clone --depth 1 --branch v2.5.0 https://github.com/pybind/pybind11.git
          rm -rf */.git
          cd $GAIA_REPO/third_party/production/cpptoml
          git clone --depth 1 --branch v0.1.1 https://github.com/skystrife/cpptoml.git
          rm -rf */.git
          cd $GAIA_REPO/third_party/production/tabulate
          git clone --depth 1 --branch v1.3 https://github.com/p-ranav/tabulate
          rm -rf */.git
          cd $GAIA_REPO/third_party/production/liburing
          git clone --depth 1 --branch liburing-2.0 https://github.com/axboe/liburing.git
          rm -rf */.git
          cd $GAIA_REPO/third_party/production/CPackDebHelper
          git clone --depth 1 https://github.com/ABruines/CPackDebHelper.git
          rm -rf */.git
          cd $GAIA_REPO
      - name: X1
        run: |
          echo "Setup Environment"
          export GAIA_REPO=/home/runner/work/GaiaPlatform/GaiaPlatform

          echo "1"
          cd
          echo "2"
          pwd

          echo Setup Link to Gdev
          mkdir -p ~/.local/bin && ln -s $GAIA_REPO/dev_tools/gdev/gdev.sh ~/.local/bin/gdev
          ls -la ~/.local/bin/gdev
          export PATH=$HOME/.local/bin:$PATH

          echo "1"
          cat /etc/docker/daemon.json
          echo "2"
          cat ~/.docker/config.json

          cd production
          gdev build --log-level=DEBUG
      # - name: Sync With Repository
      #   run: pipenv sync
      # - name: Execute Tests
      #   run: pipenv run pytest --cov-fail-under=90 --cov --cov-branch --cov-report xml:report/coverage.xml --cov-report html:report/coverage
      # - name: Report Coverage
      #   uses: codecov/codecov-action@v1
      #   if: github.event_name != 'schedule'
      #   with:
      #     file: ./report/coverage.xml
      #     name: ${{ matrix.python }} - ${{ matrix.platform }}
      #     fail_ci_if_error: true
