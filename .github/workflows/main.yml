---
name: Main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
env:
  GAIA_VERSION: 0.3.3
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  DEV_IMAGE: ghcr.io/gaia-platform/dev-base-gaia-platform:latest

jobs:
  Third-Party:
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job
        with:
          docker-user: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Third Party Image
        uses: ./.github/actions/build-third-party
        with:
          gaia-repo: ${{ github.workspace }}
          job-name: ${{ github.job }}

  Lint:
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Verify Changes Adhere to Guidelines
        uses: ./.github/actions/lint-job
        with:
          event-name: ${{ github.event_name }}

  Core:
    needs:
      - Lint
      - Third-Party
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job
        with:
          docker-user: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE
      - name: Run Unit Tests
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --gaia-version $GAIA_VERSION \
            --action unit_tests
      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output
  SDK:
    needs:
      - Lint
      - Third-Party
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job
        with:
          docker-user: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE \
              --cfg-enables GaiaSDK
      - name: Run Unit Tests
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --gaia-version $GAIA_VERSION \
            --action unit_tests
      - name: Publish Debian Package
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --gaia-version $GAIA_VERSION \
            --action publish_package
      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output
      - name: Upload Install Package
        uses: actions/upload-artifact@v2
        with:
          name: SDK Install Package
          path: |
            ${{ github.workspace }}/build/output/package
  Debug_Core:
    needs: Core
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job
        with:
          docker-user: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE \
              --cfg-enables Debug
      - name: Run Unit Tests
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --gaia-version $GAIA_VERSION \
            --action unit_tests
      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output
  Coverage:
    needs:
      - Lint
      - Third-Party
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job
        with:
          docker-user: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Coverage
        run: |
          cd $GAIA_REPO/production
          mkdir -p $GAIA_REPO/production
          $GAIA_REPO/production/coverage/coverage.sh -v
          echo "COVERAGE OUTPUT"
          echo "sudo chmod -R 777 $GAIA_REPO/production"
          sudo chmod -R 777 $GAIA_REPO/production

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Test Files
          path: |
            ${{ github.workspace }}/production/output
  LLVM_Tests:
    needs: Core
    if: ${{ false }}
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job
        with:
          docker-user: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE \
              --cfg-enables GaiaLLVMTests
      - name: Run Docker Image And Post-Build Script
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_image.sh --job-name $GITHUB_JOB --repo-path $GAIA_REPO --gaia-version $GAIA_VERSION
      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output
  Integration_Smoke:
    needs: SDK
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Download Debian Install Package
        uses: actions/download-artifact@v2
        with:
          name: SDK Install Package
          path: ${{ github.workspace }}/production/tests/packages

      - name: Tests
        working-directory: ${{ github.workspace }}
        run: |
          $GAIA_REPO/dev_tools/github-actions/execute_tests_against_package.sh --job-name $GITHUB_JOB --repo-path $GAIA_REPO --package $GAIA_REPO/production/tests/packages
      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/production/tests/results
  Integration_Smoke_Persistence:
    needs: SDK
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Download Debian Install Package
        uses: actions/download-artifact@v2
        with:
          name: SDK Install Package
          path: ${{ github.workspace }}/production/tests/packages

      - name: Tests
        working-directory: ${{ github.workspace }}
        run: |
          $GAIA_REPO/dev_tools/github-actions/execute_tests_against_package.sh --job-name $GITHUB_JOB --repo-path $GAIA_REPO --package $GAIA_REPO/production/tests/packages
      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/production/tests/results
  Integration_Samples:
    needs: SDK
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Download Debian Install Package
        uses: actions/download-artifact@v2
        with:
          name: SDK Install Package
          path: ${{ github.workspace }}/production/tests/packages

      - name: Tests
        working-directory: ${{ github.workspace }}
        run: |
          $GAIA_REPO/dev_tools/github-actions/execute_tests_against_package.sh --job-name $GITHUB_JOB --repo-path $GAIA_REPO --package $GAIA_REPO/production/tests/packages
      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/production/tests/results
  Final:
    needs:
      - Integration_Smoke
      - Integration_Smoke_Persistence
      - Integration_Samples
      - Debug_Core
      - Coverage
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2

      - name: Results
        run: |
          echo "Build Workflow: ${{ env.WORKFLOW_CONCLUSION }}"
