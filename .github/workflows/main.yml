---
name: Main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  DEV_IMAGE: ghcr.io/gaia-platform/dev-base-gaia-platform:latest

jobs:

  Third-Party:
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job
        with:
          docker-user: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          cd $GAIA_REPO/production
          pip install atools argcomplete
          $GAIA_REPO/dev_tools/gdev/gdev.sh dockerfile > $GAIA_REPO/production/raw_dockerfile
          $GAIA_REPO/dev_tools/github-actions/copy_until_line.py --input-file $GAIA_REPO/production/raw_dockerfile --output-file $GAIA_REPO/production/dockerfile --stop-line "# GenRunDockerfile(production)"
          docker buildx build -f $GAIA_REPO/production/dockerfile -t $DEV_IMAGE --cache-from $DEV_IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 --platform linux/amd64 --shm-size 1gb --ssh default --compress ..

      - name: Upload Intermediate Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/production/raw_dockerfile
            ${{ github.workspace }}/production/dockerfile

      - name: Publish Dev Image to GitHub Repository
        run: |
          echo "Pushing Dev Image to GitHub Docker Repository"
          docker push $DEV_IMAGE

      - name: Save Compressed Dev Image
        run: |
          echo "Saving Dev Image as GZipped Tarball"
          docker save $DEV_IMAGE | gzip > ${{ github.workspace }}/production/dev_image.tar.gz
          ls -la ${{ github.workspace }}/production/dev_image.tar.gz

      - name: Upload Install Package
        uses: actions/upload-artifact@v2
        with:
          name: Dev Image
          path: |
            ${{ github.workspace }}/production/dev_image.tar.gz

  Lint:
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Required Python Packages
        run: |
          python3 -m pip install pre-commit
      - name: Set Cache Key for Pre-Commit Checks
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Apply Pre-Commit Checks Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Execute Pre-Commit Checks
        run: |
          cd $GAIA_REPO/production
          pre-commit run --all-files

      - name: GitHub Info
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Ref-Name: ${{ github.ref_name }}"
          echo "Event-Name: ${{ github.event_name }}"
          echo "Event-Path: ${{ github.event_path }}"

  Core:
    needs:
      - Lint
      - Third-Party
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE

      - name: Run Unit Tests
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --action unit_tests

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output

  SDK:
    needs:
      - Core
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE \
              --cfg-enables GaiaSDK

      - name: Run Unit Tests
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --action unit_tests

      - name: Publish Debian Package
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --action publish_package

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output
            !${{ github.workspace }}/build/output/package

      - name: Upload Install Package
        uses: actions/upload-artifact@v2
        with:
          name: SDK Install Package
          path: |
            ${{ github.workspace }}/build/output/package

  Debug_Core:
    needs:
      - Core
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE \
              --cfg-enables Debug

      - name: Run Unit Tests
        run: |
          $GAIA_REPO/dev_tools/github-actions/post_build_action.sh \
            --repo-path $GAIA_REPO \
            --action unit_tests

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output

  Coverage:
    needs:
      - Lint
      - Third-Party
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job

      - name: Coverage
        run: |
          cd $GAIA_REPO/production
          mkdir -p $GAIA_REPO/production
          sudo chmod -R 777 $GAIA_REPO/production
          mkdir -p $GAIA_REPO/build/output
          sudo chmod -R 777 $GAIA_REPO/build/output
          $GAIA_REPO/production/coverage/coverage.sh --verbose --output $GAIA_REPO/build/output
          cp $GAIA_REPO/production/raw_dockerfile $GAIA_REPO/build/output
          cp $GAIA_REPO//production/dockerfile $GAIA_REPO/build/output
          echo "sudo chmod -R 777 $GAIA_REPO/production"
          sudo chmod -R 777 $GAIA_REPO/production

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Test Files
          path: |
            ${{ github.workspace }}/build/output

  LLVM_Tests:
    needs:
      - Lint
      - Third-Party
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Action
        uses: ./.github/actions/setup-job

      - name: Build Docker Image
        run: |
          $GAIA_REPO/dev_tools/github-actions/build_image.sh \
              --repo-path $GAIA_REPO \
              --base-image $DEV_IMAGE \
              --cfg-enables GaiaLLVMTests

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/build/output

  Integration_Tests:
    needs: SDK
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    strategy:
      matrix:
        persistence: [enabled, disabled]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Download Debian Install Package
        uses: actions/download-artifact@v2
        with:
          name: SDK Install Package
          path: ${{ github.workspace }}/production/tests/packages

      - name: Tests
        working-directory: ${{ github.workspace }}
        run: |
          $GAIA_REPO/dev_tools/github-actions/execute_tests_against_package.sh \
            --verbose \
            --job-name $GITHUB_JOB \
            --repo-path $GAIA_REPO \
            --db-persistence ${{ matrix.persistence }} \
            --package $GAIA_REPO/production/tests/packages

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} With Persistence ${{ matrix.persistence }} Output Files
          path: |
            ${{ github.workspace }}/production/tests/results

  Integration_Samples:
    needs: SDK
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Download Debian Install Package
        uses: actions/download-artifact@v2
        with:
          name: SDK Install Package
          path: ${{ github.workspace }}/production/tests/packages

      - name: Tests
        working-directory: ${{ github.workspace }}
        run: |
          $GAIA_REPO/dev_tools/github-actions/execute_tests_against_package.sh \
            --verbose \
            --job-name $GITHUB_JOB \
            --repo-path $GAIA_REPO \
            --package $GAIA_REPO/production/tests/packages

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}} Output Files
          path: |
            ${{ github.workspace }}/production/tests/results

  Final:
    needs:
      - Lint
      - Third-Party
      - Core
      - SDK
      - Debug_Core
      - Coverage
      - LLVM_Tests
      - Integration_Smoke
      - Integration_Smoke_Persistence
      - Integration_Samples
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: Dev Image

      - uses: technote-space/workflow-conclusion-action@v2

      - name: Results
        run: |
          echo "Build Workflow: ${{ env.WORKFLOW_CONCLUSION }}"
