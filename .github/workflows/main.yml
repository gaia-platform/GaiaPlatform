---
name: Main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - jack/gha

jobs:
  Third-Party:
    runs-on: ubuntu-20.04
    env:
      GAIA_REPO: ${{ github.workspace }}
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      DEV_IMAGE: ghcr.io/gaia-platform/dev-base:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Pull Latest Dev-Core Image
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull $DEV_IMAGE

      - name: Build Docker Image
        run: |
          cd $GAIA_REPO/production
          pip install atools argcomplete
          $GAIA_REPO/dev_tools/gdev/gdev.sh dockerfile > $GAIA_REPO/production/raw_dockerfile
          $GAIA_REPO/dev_tools/github-actions/copy_until_line.py --input-file $GAIA_REPO/production/raw_dockerfile --output-file $GAIA_REPO/production/dockerfile --stop-line "# GenRunDockerfile(production)"
          docker buildx build -f $GAIA_REPO/production/dockerfile -t $DEV_IMAGE --cache-from $DEV_IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 --platform linux/amd64 --shm-size 1gb --ssh default --compress ..

      - name: Upload Intermediate Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Third-Party Docker Files
          path: |
            ${{ github.workspace }}/production/raw_dockerfile
            ${{ github.workspace }}/production/third_party_dockerfile
      
      - name: Rename Image and Publish
        run: |
          docker push ghcr.io/gaia-platform/dev-base:latest

  Lint:
    runs-on: ubuntu-20.04
    needs: Third-Party
    container:
      image: ghcr.io/gaia-platform/dev-base:latest
    env:
      GAIA_REPO: ${{ github.workspace }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Required Python Packages
        run: |
          python3.8 -m pip install pre-commit
          python3 -m pip install pre-commit
      - name: XXX
        run: |
          cd $GAIA_REPO/production
          echo "Executing Clang-Format on Production Tree"
          echo "$GAIA_REPO/dev_tools/hooks/clang-format.sh"

      - name: Set Cache Key for Pre-Commit Checks
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Apply Pre-Commit Checks Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Execute Pre-Commit Checks
        run: |
          cd $GAIA_REPO/production
          pre-commit run --all-files
  Core:
    runs-on: ubuntu-20.04
    needs: Lint
    env:
      GAIA_REPO: ${{ github.workspace }}
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Pull Latest Dev-Core Image
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ghcr.io/gaia-platform/dev-base:latest

      - name: Build Docker Image
        run: |
          cd $GAIA_REPO/production
          pip install atools argcomplete
          $GAIA_REPO/dev_tools/gdev/gdev.sh dockerfile > $GAIA_REPO/production/dockerfile
          docker buildx build -f $GAIA_REPO/production/dockerfile \
            -t core_image --cache-from ghcr.io/gaia-platform/dev-base:latest --build-arg BUILDKIT_INLINE_CACHE=1 --platform linux/amd64 --shm-size 1gb --ssh default --compress ..

      - name: Upload Intermediate Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Core Docker Files
          path: |
            ${{ github.workspace }}/production/dockerfile

      - name: Run Docker Image And Post-Build Script
        run: |
          cd $GAIA_REPO/production
          mkdir -p $GAIA_REPO/build/output
          docker run --rm --init -t --platform linux/amd64 \
            --mount type=volume,dst=/build/output,volume-driver=local,volume-opt=type=none,volume-opt=o=bind,volume-opt=device=$GAIA_REPO/build/output \
            core_image /source/dev_tools/github-actions/bob.sh --job-name $GITHUB_JOB

      - name: Upload Output Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Core Output Files
          path: |
            ${{ github.workspace }}/build/output

  SDK:
    runs-on: ubuntu-20.04
    needs: Core
    env:
      GAIA_REPO: ${{ github.workspace }}
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python Packages
        run: |
          python3.8 -m pip install --user atools argcomplete

      - name: Pull Latest Dev-Core Image
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ghcr.io/gaia-platform/dev-base:latest

      - name: Build Docker Image
        run: |
          cd $GAIA_REPO/production
          docker buildx build -f baz -t xxx --cache-from ghcr.io/gaia-platform/dev-base:latest --build-arg BUILDKIT_INLINE_CACHE=1 --platform linux/amd64 --shm-size 1gb --ssh default --compress ..
